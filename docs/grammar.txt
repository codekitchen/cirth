<program> ::= [<explist>]

<explist> ::= <exp> [; [<explist>]]

<exp> ::= <application>
       |  <mutation>
       |  <definition>
        
<application> ::= <term>+

<term> ::= <header>*<value><trailer>*

<value> ::= \(<explist>\)
         |  <function>
         |  <variable>
         |  <integer>
         |  <string>
         |  <float>
         |  <dictionary>
         |  <array>

<header> ::= <left-indicator>     # open call

<trailer> ::= <right-indicator>   # open call
           |  .<variable>         # lookup
           |  \[<explist>\]       # index
           |  \([<out-arguments>;] [<out-arguments>]\) # closed call

<left-indicator> ::= @

<right-indicator> ::= ' | ?

<out-arguments> ::= (<out-argument>,)* <out-argument>

<out-argument> ::= <application>
                |  <variable> : <application>
                |  \*\(<explist>\)
                |  \*\*\(<explist>\)

<mutation> ::= <assignee> := <exp>

<definition> ::= <assignee> = <exp>

<assignee> ::= <variable>
            |  <term>.<variable>
            |  <term>\[<explist>\]

<function> ::= {<explist>}
            |  {|<arglist>| <explist>}

<arglist> ::= [<in-arguments>;] [<in-arguments>]

<in-arguments> ::= (<in-argument>,)* <in-argument>

<in-argument> ::= <variable>
               |  <variable> : <application>
               |  \*\(<variable>\)
               |  \*\*\(<variable>\)

<dictionary> ::= { (<dict-definition>,)* [<dict-definition>] }

<dict-definition> ::= <application>: <application>

<array> ::= \[(<application>,)* [<application]\]
